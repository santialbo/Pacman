// Generated by CoffeeScript 1.6.2
(function() {
  var Game, Level, Sprite, SpriteDict, canvas, game,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  Sprite = (function() {
    function Sprite(image, x, y, width, height) {
      this.image = image;
      this.x = x;
      this.y = y;
      this.width = width;
      this.height = height;
    }

    Sprite.prototype.draw = function(ctx, x, y, width, height) {
      return ctx.drawImage(this.image, this.x, this.y, this.width, this.height, x, y, width, height);
    };

    Sprite.prototype.drawScaled = function(ctx, x, y, scale) {
      return ctx.drawImage(this.image, this.x, this.y, this.width, this.height, x * scale, y * scale, this.width * scale, this.height * scale);
    };

    return Sprite;

  })();

  SpriteDict = (function() {
    SpriteDict.prototype.sprite = null;

    SpriteDict.prototype.info = null;

    function SpriteDict(spriteFile, infoFile, callback) {
      var _this = this;

      this.sprite = new Image();
      this.sprite.src = spriteFile;
      $.getJSON(infoFile, function(json) {
        _this.info = json;
        return callback();
      });
    }

    SpriteDict.prototype.get = function(name) {
      var spriteInfo;

      spriteInfo = this.info[name];
      return new Sprite(this.sprite, spriteInfo.x, spriteInfo.y, spriteInfo.width, spriteInfo.height);
    };

    return SpriteDict;

  })();

  Level = (function() {
    Level.prototype.entities = null;

    Level.prototype.background = null;

    function Level(filename) {
      $.get(filename, function(data) {});
    }

    return Level;

  })();

  Game = (function() {
    Game.prototype.SCALE = 1;

    Game.prototype.WIDTH = 170;

    Game.prototype.HEIGHT = 40 + 215 + 20;

    Game.prototype.FPS = 30;

    Game.prototype.interval = null;

    Game.prototype.sprites = null;

    function Game(canvas) {
      this.canvas = canvas;
      this.createEntities = __bind(this.createEntities, this);
      this.setup();
    }

    Game.prototype.setup = function() {
      this.canvas.height = this.HEIGHT * this.SCALE;
      this.canvas.width = this.WIDTH * this.SCALE;
      return this.sprites = new SpriteDict('resources/spritesheet.png', 'resources/spritesheet.json', this.createEntities);
    };

    Game.prototype.createEntities = function() {
      return this.run();
    };

    Game.prototype.run = function() {
      var _this = this;

      return this.interval = setInterval(function() {
        _this.update();
        return _this.draw();
      }, 1000 / this.FPS);
    };

    Game.prototype.update = function() {};

    Game.prototype.draw = function() {
      var ctx, level_sprite;

      ctx = this.canvas.getContext('2d');
      ctx.fillStyle = '#000';
      ctx.fillRect(0, 0, this.WIDTH * this.SCALE, this.HEIGHT * this.SCALE);
      level_sprite = this.sprites.get("level_blue");
      return level_sprite.drawScaled(ctx, 0, 40, this.SCALE);
    };

    return Game;

  })();

  canvas = document.getElementById('canvas');

  game = new Game(canvas);

}).call(this);
